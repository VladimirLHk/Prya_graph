{"version":3,"sources":["constants.js","Redux/reducers/periodFilter.js","Redux/actionTypes.js","Redux/reducers/index.js","Redux/store.js","dataSource.js","Components/Chart/chart.js","Components/Buttons/Button/button.js","Components/Buttons/buttons.js","Redux/actions.js","App.js","index.js"],"names":["PERIODS","DAY","MONTH","YEAR","initialState","periodFilter","state","action","type","payload","period","combineReducers","createStore","rootReducer","getChartData","elNum","Math","floor","random","data","labels","set1","set2","i","push","Chart","dataForCharts","chartParams","datasets","label","backgroundColor","className","Component","connect","Button","buttonText","this","props","buttonClassName","isPressed","onClick","activePeriod","setPeriod","Object","keys","map","periodKey","currentPeriod","key","App","ReactDOM","render","store","document","getElementById"],"mappings":"uOAAaA,EAAU,CACrBC,IAAK,2BACLC,MAAO,iCACPC,KAAM,sBCAFC,EAAeJ,EAAQC,IAadI,EAXM,WAAmC,IAAlCC,EAAiC,uDAAzBF,EAAcG,EAAW,uCACrD,OAAQA,EAAOC,MACb,ICPsB,aDQpB,OAAOD,EAAOE,QAAQC,OAExB,QACE,OAAOJ,IEREK,cAAgB,CAAEN,iBCAlBO,cAAYC,G,qECYZC,EAfI,SAACJ,GAOlB,IANA,IAAMK,EAAQ,EAAEC,KAAKC,MAAsB,GAAhBD,KAAKE,UAC5BC,EAAO,CACTC,OAAQ,GACRC,KAAM,GACNC,KAAM,IAECC,EAAE,EAAGA,EAAER,EAAOQ,IACrBJ,EAAKC,OAAOI,KAAKD,GACjBJ,EAAKE,KAAKG,KAAKR,KAAKE,SAAWH,GAC/BI,EAAKG,KAAKE,MAAMR,KAAKE,SAAS,KAAOH,GAEvC,OAAOI,GCNHM,E,iLAGF,IAAIC,EAAgBZ,IAEhBa,EAAc,CACdP,OAAQM,EAAcN,OACtBQ,SAAU,CACR,CACEC,MAAO,WACPC,gBAAiB,0BACjBX,KAAMO,EAAcL,MAEtB,CACEQ,MAAO,WACPC,gBAAiB,wBACjBX,KAAMO,EAAcJ,QAK5B,OACE,yBAAKS,UAAU,SACb,kBAAC,IAAD,CACEZ,KAAMQ,S,GAxBIK,aAoCLC,eALS,SAAA3B,GACGA,EAAjBD,aACR,MAAO,CAACC,WAGK2B,CAAyBR,GCtCnBS,G,sMAEjB,IAAIC,EAAaC,KAAKC,MAAMF,WACxBG,EAAkB,oBAAsBF,KAAKC,MAAME,UAAY,iBAAmB,IACtF,OACE,yBAAKR,UAAU,UACb,4BAAQvB,KAAK,SAASuB,UAAWO,EAAiBE,QAASJ,KAAKC,MAAMG,SACpE,0BAAMT,UAAU,gBAAgBI,S,GAPNH,cCwBrBC,eAJS,SAAA3B,GACtB,MAAO,CAAEmC,aAAcnC,EAAMD,gBAK7B,CAAEqC,UC5BqB,SAAAhC,GAAM,MAAK,CAAEF,KPFZ,aOE8BC,QAAS,CAAEC,aD0BpDuB,EArBO,SAAC,GAAiC,IAA/BQ,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UACrC,OACE,yBAAKX,UAAU,WACZY,OAAOC,KAAK5C,GAAS6C,KAAI,SAAAC,GACxB,IAAMC,EAAgB/C,EAAQ8C,GAC9B,OACE,kBAAC,EAAD,CACEE,IAAK,UAAUF,EACfX,WAAcY,EACdR,UAAaQ,IAAkBN,EAC/BD,QAAW,WAAOE,EAAUK,aEZnBE,E,iLAEjB,OACE,yBAAKlB,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GALyBC,aCCjCkB,IAASC,OACP,kBAAC,IAAD,CAAUC,MAAOA,GACf,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.6292a32b.chunk.js","sourcesContent":["export const PERIODS = {\n  DAY: \"день\",\n  MONTH: \"месяц\",\n  YEAR: \"год\"\n};\n\n","import { SET_PERIOD } from \"../actionTypes\";\nimport { PERIODS } from \"../../constants\";\n\nconst initialState = PERIODS.DAY;\n\nconst periodFilter = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_PERIOD: {\n      return action.payload.period;\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default periodFilter\n","export const SET_PERIOD = \"SET_PERIOD\";\n","import { combineReducers } from \"redux\";\nimport periodFilter from \"./periodFilter\";\n\nexport default combineReducers({ periodFilter });\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nexport default createStore(rootReducer);\n","let getChartData = (period) => {\n  const elNum = 3+Math.floor(Math.random() * 20);\n  let data = {\n    labels: [],\n    set1: [],\n    set2: [],\n  };\n  for (let i=0; i<elNum; i++) {\n    data.labels.push(i);\n    data.set1.push(Math.random() * elNum);\n    data.set2.push((Math.random()-1.5) * elNum);\n  }\n  return data;\n};\n\nexport default getChartData;","import React, {Component} from 'react';\nimport { connect } from \"react-redux\";\nimport './chart.css';\nimport {Line} from \"react-chartjs-2\";\nimport getChartData from \"../../dataSource\";\n\nclass Chart extends Component {\n\n  render() {\n    let dataForCharts = getChartData();\n\n    let chartParams = {\n        labels: dataForCharts.labels,\n        datasets: [\n          {\n            label: \"DataSet1\",\n            backgroundColor: \"rgba(255, 0, 255, 0.75)\",\n            data: dataForCharts.set1,\n          },\n          {\n            label: \"DataSet2\",\n            backgroundColor: \"rgba(0, 255, 0, 0.75)\",\n            data: dataForCharts.set2,\n          }\n        ]\n    };\n\n    return (\n      <div className=\"chart\">\n        <Line\n          data={chartParams}\n        />\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  const { periodFilter } = state;\n  return {state};\n};\n\nexport default connect(mapStateToProps)(Chart);\n\n","import React, {Component} from 'react';\nimport './button.css';\nimport './button_pressed.css';\n\nexport default class Button extends Component {\n  render() {\n    let buttonText = this.props.buttonText;\n    let buttonClassName = \"button__wrapper \" + (this.props.isPressed ? \"button_pressed\" : \"\");\n    return (\n      <div className=\"button\">\n        <button type=\"button\" className={buttonClassName} onClick={this.props.onClick}>\n          <span className=\"button__text\">{buttonText}</span>\n        </button>\n      </div>\n    );\n  }\n};","import React from 'react';\nimport './buttons.css';\nimport Button from \"./Button/button\";\nimport {PERIODS} from \"../../constants\";\nimport { connect } from \"react-redux\";\nimport { setPeriod } from \"../../Redux/actions\";\n\nconst periodButtons = ({ activePeriod, setPeriod }) => {\n  return (\n    <div className=\"buttons\">\n      {Object.keys(PERIODS).map(periodKey => {\n        const currentPeriod = PERIODS[periodKey];\n        return (\n          <Button\n            key={\"button-\"+periodKey}\n            buttonText = {currentPeriod}\n            isPressed = {currentPeriod === activePeriod}\n            onClick = {() => {setPeriod(currentPeriod);}}\n          />)\n      })}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return { activePeriod: state.periodFilter };\n};\n\nexport default connect(\n  mapStateToProps,\n  { setPeriod }\n)(periodButtons);\n","import { SET_PERIOD } from \"./actionTypes\";\n\nexport const setPeriod = period => ({ type: SET_PERIOD, payload: { period } });\n","import React, {Component} from 'react';\nimport './app.css';\nimport Chart from \"./Components/Chart/chart\";\nimport Buttons from \"./Components/Buttons/buttons\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Chart/>\n        <Buttons/>\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from \"./Redux/store\";\nimport App from './App';\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}